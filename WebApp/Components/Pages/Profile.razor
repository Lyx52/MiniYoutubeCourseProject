@page "/profile"
@using Domain.Model.Response
@using Domain.Model.View
@using Domain.Interfaces
@inject ILoginManager _loginManager;
<div class="container-fluid rounded bg-white mt-5 mb-5">
    <div class="row">
        <div class="col-md-3 border-right">
            <div class="d-flex flex-column align-items-center text-center p-3 py-5">
                <img class="rounded-circle mt-5" width="150px" src="https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg">
                <span class="font-weight-bold">@Model?.Username</span>
                <span class="text-black-50">@Model?.Email</span>
            </div>
        </div>
        <div class="col-md-5 border-right">
            <div class="p-3 py-5">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h4 class="text-right">Profile Settings</h4>
                </div>
                <div class="row mt-2">
                    <div class="col-md-6"><label class="labels">Name</label><input type="text" class="form-control" placeholder="first name" value=""></div>
                    <div class="col-md-6"><label class="labels">Surname</label><input type="text" class="form-control" value="" placeholder="surname"></div>
                </div>
                <div class="mt-5 text-center"><button class="btn btn-primary profile-button" type="button">Save Profile</button></div>
            </div>
        </div>
    </div>
</div>
@code {
    private UserModel Model { get; set; }
    private bool IsLoaded { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadContent();
            await InvokeAsync(StateHasChanged);
        }
    }

    private async Task LoadContent()
    {
        if (IsLoaded) return;
        var response = await _loginManager.GetUserProfile();
        if (!response.Success)
        {
            await _loginManager.LogoutAsync();
            return;
        }
        Model = response.User;
        IsLoaded = true;
    }
}