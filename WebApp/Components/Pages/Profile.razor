@page "/profile"
@using Domain.Model.Response
@using Domain.Model.View
@using Domain.Interfaces
@inject IUserHttpClient _userHttpClient
@inject ILoginManager _loginManager
<div class="container">
  <div class="main-body">

        <!-- Breadcrumb -->
        <nav aria-label="breadcrumb" class="main-breadcrumb">
          <ol class="breadcrumb">
            <li class="breadcrumb-item"><NavLink href="/" Match=NavLinkMatch.All>Home</NavLink></li>
            <li class="breadcrumb-item active" aria-current="page">Profile</li>
          </ol>
        </nav>
        <!-- /Breadcrumb -->
        
        @if (Model is not null)
        {
          <div class="row gutters-sm">
            <div class="col-md-4 mb-3">
              <div class="card">
                <div class="card-body">
                  <div class="d-flex flex-column align-items-center text-center">
                    <img src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="Admin" class="rounded-circle" width="150">
                    <div class="mt-3">
                      <h4>John Doe</h4>
                      <p class="text-secondary mb-1">Full Stack Developer</p>
                      <button class="btn btn-primary">Subscribe</button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="col-md-8">
              <div class="card mb-3">
                <div class="card-body">
                  <div class="row">
                    <div class="col-sm-3">
                      <h6 class="mb-0">Creator Name</h6>
                    </div>
                    <div class="col-sm-9 text-secondary">
                      @Model.CreatorName
                    </div>
                  </div>
                  <hr>
                  <div class="row">
                    <div class="col-sm-3">
                      <h6 class="mb-0">Username</h6>
                    </div>
                    <div class="col-sm-9 text-secondary">
                      @Model.Username
                    </div>
                  </div>
                  <hr>
                  <div class="row">
                    <div class="col-sm-3">
                      <h6 class="mb-0">Email</h6>
                    </div>
                    <div class="col-sm-9 text-secondary">
                      @Model.Email
                    </div>
                  </div>
                  <hr>
                  <div class="row">
                    <div class="col-sm-3">
                      <h6 class="mb-0">Pinned video</h6>
                    </div>
                    <div class="col-sm-9 text-secondary">
                      <NavLink href="/"></NavLink>
                    </div>
                  </div>
                  <hr>
                  <div class="row">
                    <div class="col-sm-3">
                      <h6 class="mb-0">Last upload</h6>
                    </div>
                    <div class="col-sm-9 text-secondary">
                      <NavLink href="/"></NavLink>
                    </div>
                  </div>
                  <hr>
                  <div class="row">
                    <div class="col-sm-12">
                      <a class="btn btn-info " target="__blank" href="https://www.bootdey.com/snippets/view/profile-edit-data-and-skills">Edit</a>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        }
      </div>
  </div>
@code {
    private UserModel Model { get; set; }
    private bool IsLoaded { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadContent();
            await InvokeAsync(StateHasChanged);
        }
    }

    private async Task LoadContent()
    {
        if (IsLoaded) return;
        var response = await _userHttpClient.GetUserProfile();
        if (!response.Success)
        {
            await _loginManager.LogoutAsync();
            return;
        }
        Model = response.User;
        IsLoaded = true;
    }
}