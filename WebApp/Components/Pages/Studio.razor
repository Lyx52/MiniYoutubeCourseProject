@page "/studio"
@using WebApp.Models
<AuthorizeView>
    <NotAuthorized>
        <AuthBarrier />
    </NotAuthorized>
    <Authorized>
        <div class="container-fluid">
            <div class="row flex-nowrap">
                <div class="col-auto px-0">
                    <div id="sidebar" class="collapse collapse-horizontal show border-end">
                        <div id="sidebar-nav" class="list-group border-0 rounded-0 text-sm-start min-vh-100">
                            <a @onclick="OnOpenVideosPage" class="list-group-item border-end-0 d-inline-block text-truncate cursor-pointer" data-bs-parent="#sidebar">
                                <i class="bi bi-film"></i> <span>Videos</span>
                            </a>
                            <a @onclick="OnOpenPlaylistPage" class="list-group-item border-end-0 d-inline-block text-truncate cursor-pointer" data-bs-parent="#sidebar">
                                <i class="bi bi-view-list"></i> <span>Playlists</span>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="col ps-md-2 pt-2">
                    <div class="d-flex flex-column w-100">
                        <div class="d-flex flex-row w-100">
                            <a href="#" data-bs-target="#sidebar" data-bs-toggle="collapse" class="btn btn-outline-dark">
                                <i class="bi bi-list bi-lg py-2 p-1"></i> Menu
                            </a>
                            
                        </div>
                        <div class="d-flex flex-row w-100">
                            @switch (CurrentState)
                            {
                                case StudioState.VideoListView:
                                {
                                    <a @onclick="OnOpenUploadModal" class="btn btn-outline-dark ms-auto">
                                        <i class="bi bi-file-earmark-play"></i> Upload video
                                    </a>   
                                } break;
                                case StudioState.PlayListView:
                                {
                                    <a @onclick="OnOpenCreatePlaylistModal" class="btn btn-outline-dark ms-auto">
                                        <i class="bi bi-view-list"></i> Create playlist
                                    </a>
                                } break;
                            }
                        </div>
                    </div>
                    <hr>
                    @switch (CurrentState)
                    {
                        case StudioState.VideoListView:
                        {
                            <StudioVideoList @ref="_videoListView"/>
                        }
                            break;
                        case StudioState.PlayListView:
                        {
                            <StudioPlaylistList @ref="_playListView"/>
                        } break;
                    }
                </div>
            </div>
        </div>    
    </Authorized>
</AuthorizeView>
@code {
    
    private StudioState CurrentState { get; set; }
    private StudioVideoList _videoListView;
    private StudioPlaylistList _playListView;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task OnOpenVideosPage()
    {
        CurrentState = StudioState.VideoListView;
        await InvokeAsync(StateHasChanged);
    }
    private async Task OnOpenPlaylistPage()
    {
        CurrentState = StudioState.PlayListView;
        await InvokeAsync(StateHasChanged);
    }

    private async Task OnOpenUploadModal()
    {
        await _videoListView.OpenUploadModal(true);
    }

    private async Task OnOpenCreatePlaylistModal()
    {
        await _playListView.OpenCreatePlaylistModal(true);
    }
}