@page "/studio"
@using Microsoft.AspNetCore.Components.Authorization
@using WebApp.Services
@using WebApp.Services.Interfaces
@using Domain.Model.Response
@inject AuthenticationStateProvider _authenticationStateProvider
@inject ILoginManager _loginManager;
@rendermode InteractiveServer
<VideoUploadModal @ref="_videoUploadModal"/>
@code {
    private VideoUploadModal _videoUploadModal;
    [CascadingParameter] 
    public Task<AuthenticationState> _authState { get; set; }
    protected override async Task OnInitializedAsync()
    {
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            await _videoUploadModal.ShowModalAsync();
        }
    }

}