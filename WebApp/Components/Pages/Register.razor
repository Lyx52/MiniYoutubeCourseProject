@page "/register"
@using Domain.Model.View
@using Domain.Interfaces
@using Domain.Model
@using Domain.Model.Response
@using Microsoft.AspNetCore.Components
@inject IAuthHttpClient _authHttpClient
@inject PreloadService _preloadService
@inject NavigationManager _navigationManager
<div class="m-0 row justify-content-center">
    <EditForm EditContext="@_registerContext" class="card col-12 col-md-8 col-lg-4 px-4 py-4 mt-5 border-0" OnValidSubmit="OnRegister">
        <Preload/>
        <h1 class="fs-3 fw-bold text-center user-select-none">Register</h1>
        <hr/>
        <DataAnnotationsValidator/>
        @if (!_responseModel.Success)
        {
            <p class="text-danger">@_responseModel.Message</p>
        }
        <div class="form-floating mb-2">
            <InputText @bind-Value="_model.Email" class="form-control" id="floatingEmail" placeholder="Email"/>
            <label for="floatingEmail">Email</label>
            <ValidationMessage For="() => _model.Email" class="text-danger"/>
        </div>
        <div class="form-floating mb-2">
            <InputText @bind-Value="_model.Username" class="form-control" id="floatingUsername" placeholder="Username"/>
            <label for="floatingUsername">Username</label>
            <ValidationMessage For="() => _model.Username" class="text-danger"/>
        </div>
        <div class="form-floating mb-3">
            <InputText type="password" @bind-Value="_model.Password" class="form-control" id="floatingPassword" placeholder="Password"/>
            <label for="floatingPassword">Password</label>
            <ValidationMessage For="() => _model.Password" class="text-danger"/>
        </div>
        <div class="form-floating mb-3">
            <InputText type="password" @bind-Value="_model.ConfirmPassword" class="form-control" id="floatingConfirmPassword" placeholder="Confirm password"/>
            <label for="floatingConfirmPassword">Confirm password</label>
            <ValidationMessage For="() => _model.ConfirmPassword" class="text-danger"/>
        </div>
        <hr/>
         <NavLink class="link-body-emphasis text-end mb-2 link-underline-opacity-0 link-underline-opacity-50-hover" href="login" Match="@NavLinkMatch.All">Already have an account? Login here</NavLink>
        <Button class="w-100 btn btn-lg btn-dark" Type="ButtonType.Submit">Register</Button>
    </EditForm>
</div>
@code {
    private EditContext _registerContext { get; set; }
    private RegisterModel _model { get; set; }
    private Response _responseModel { get; set; } = new Response();
    protected override async Task OnInitializedAsync()
    {
        _model = new RegisterModel();
        _registerContext = new EditContext(_model);
    }

    private async Task OnRegister()
    {
        _preloadService.Show(SpinnerColor.Dark);
        StateHasChanged();
        _responseModel = await _authHttpClient.RegisterAsync(_model);
        if (_responseModel.Success)
        {
            _navigationManager.NavigateTo("/login", false, true);
        }
        _preloadService.Hide();
        StateHasChanged();
    }
}