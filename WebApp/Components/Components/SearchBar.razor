@using Domain.Entity
@using Domain.Interfaces
@using Domain.Constants
@inject IVideoHttpClient _videoHttpClient
@inject NavigationManager _navigationManager
<div class="input-group search-bar">
    <AutoComplete @ref="_autocomplete"
        @bind-Value="_videoTitle"
        TItem="Video"
        DataProvider="VideoDataProvider"
        PropertyName="Title"
        Placeholder="Search for a video..."
        OnChanged="OnVideoSelected"
        Class="search-bar-autocomplete">
    </AutoComplete>
</div>
@code {
    private string _videoTitle;
    private AutoComplete<Video> _autocomplete;
    private static IEnumerable<Video> Empty = new List<Video>();
    private async Task<AutoCompleteDataProviderResult<Video>> VideoDataProvider(AutoCompleteDataProviderRequest<Video> request)
    {
        var response = await _videoHttpClient.GetVideosByTitle(request.Filter.Value, 0, 20, request.CancellationToken);
        if (!response.Success)
        {
            return await Task.FromResult(new AutoCompleteDataProviderResult<Video>
            {
                Data = Empty, 
                TotalCount = 0
            });    
        }
        
        return await Task.FromResult(new AutoCompleteDataProviderResult<Video>
        {
            Data = response.Videos, 
            TotalCount = response.Videos.Count()
        });
    }

    private async Task OnVideoSelected(Video? video)
    {
        if (video is null) return;
        if (Guid.TryParse(video.Id, out var videoId))
        {
            _navigationManager.NavigateTo($"/watch/{videoId.ToEncodedId()}", false, true);    
        }
        await _autocomplete.ResetAsync();
    }

}